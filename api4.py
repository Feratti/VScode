import requests
import hashlib
import hmac
import base64
import time
import json
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from email.mime.base import MIMEBase
from datetime import datetime
from email import encoders
import smtplib

def generate_signature(access_token, url):
    timestamp = str(int(time.time()))
    string_to_sign = 'POST' + '\n' + 'application/json' + '\n' + 'application/json;charset=UTF-8' + '\n' + url
    signature = base64.b64encode(hmac.new(access_token.encode(), string_to_sign.encode(), hashlib.sha256).digest()).decode()
    return signature, timestamp

def send_request(endpoint, url, headers, payload):
    return requests.post(f'{endpoint}{url}', headers=headers, json=payload, verify=False)

def send_email(sender, password, recipient, subject, body, attachment_path):
    msg = MIMEMultipart('alternative')
    msg['From'] = sender
    msg['To'] = recipient
    msg['Subject'] = subject
    msg.attach(MIMEText(body, 'plain'))
    
    part = MIMEBase('application', "octet-stream")
    part.set_payload(open(attachment_path, "rb").read())
    encoders.encode_base64(part)
    part.add_header('Content-Disposition', f'attachment; filename="{attachment_path}"')
    msg.attach(part)
    
    with smtplib.SMTP('smtp.mail.ru', 587) as server:
        server.starttls()
        server.login(user=sender, password=password)
        server.send_message(msg)

# Email settings
sending_ts = datetime.now()
subject = f"Log from HCP | {sending_ts.strftime('%Y-%m-%d %H:%M:%S')}"
sender = "feratti@mail.ru"
password = "mWc3DC8Py4ZGApyFVsUR"
recipient = "kuzin.vadim@outlook.com"

# API settings
endpoint = 'https://172.18.59.69'
app_key = '21225955'
access_token = 'Q4hUC71yQfqNI141LOoS'
url = '/artemis/api/acs/v1/door/events'

event_code = 196893
event = 'Access Granted by Face' if event_code == 196893 else 'Unknown Event'

command_payload = {
    "startTime": "2025-02-12T08:00:00+04:00",
    "endTime": "2025-02-12T20:00:00+04:00",
    "eventType": event_code,
    "personName": "",
    "doorIndexCodes": ["3"],
    "pageNo": 1,
    "pageSize": 100
}

# Generate headers
signature, timestamp = generate_signature(access_token, url)
headers = {
    'Accept': 'application/json',
    'Content-Type': 'application/json;charset=UTF-8',
    'X-Ca-Key': app_key,
    'X-Ca-Signature': signature,
    'X-Ca-Timestamp': timestamp
}

# Execute request
response = send_request(endpoint, url, headers, command_payload)

if response.status_code == 200:
    result = response.json()
    total = result['data']['total']
    values = result['data']['list']
    
    output_data = []
    for d in values:
        output_data.append({
            'Name': d['personName'],
            'Check in time': d['eventTime'],
            'Check point name': d['doorName'],
            'Temperature': d['temperatureData']
        })
    
    with open('result.json', 'w') as file:
        json.dump(output_data, file, indent=4)
    
    email_body = f"This message was automatically generated by openAPI script\nTotal events: {total}\nEvent type: {event}"
    send_email(sender, password, recipient, subject, email_body, 'result.json')
    
    print("Command executed successfully ...")
else:
    print("Failed to execute command:", response.text)