import requests
import json
import time
from datetime import datetime
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from email.mime.base import MIMEBase
from email import encoders
import smtplib
import hmac
import hashlib
import base64

def send_email(sender, password, recipient, subject, body, attachment_filename, attachment_data):
    msg = MIMEMultipart('alternative')
    msg['From'] = sender
    msg['To'] = recipient
    msg['Subject'] = subject
    
    msg.attach(MIMEText(body, 'plain'))
    obj = MIMEBase('application', "octet-stream")
    obj.set_payload(attachment_data)
    encoders.encode_base64(obj)
    obj.add_header('Content-Disposition', f'attachment; filename="{attachment_filename}"')
    msg.attach(obj)
    
    with smtplib.SMTP('smtp.mail.ru', 587) as s:
        s.starttls()
        s.login(user=sender, password=password)
        s.send_message(msg)

def generate_headers(url, payload, app_key, access_token):
    timestamp = str(int(time.time()))
    string_to_sign = f'POST\napplication/json\napplication/json;charset=UTF-8\n{url}'
    signature = base64.b64encode(
        hmac.new(access_token.encode(), string_to_sign.encode(), hashlib.sha256).digest()
    ).decode()
    return {
        'Accept': 'application/json',
        'Content-Type': 'application/json;charset=UTF-8',
        'X-Ca-Key': app_key,
        'X-Ca-Signature': signature,
        'X-Ca-Timestamp': timestamp
    }

def send_request(endpoint, url, payload, headers):
    response = requests.post(f'{endpoint}{url}', headers=headers, json=payload, verify=False)
    return response

def process_response(response, filename, sender, password, recipient):
    if response.status_code == 200:
        result = response.text
        with open(filename, 'w') as f:
            json.dump(result, f)
        js_obj = json.loads(result)
        jf = json.dumps(js_obj, indent=4)
        email_body = "This message was automatically generated by openAPI script" + '\n' + '\n' + 'Output of result:' '\n' + jf
        send_email(sender, password, recipient, "API Response", email_body, filename, jf)
        print("Command executed successfully:", result)
    else:
        print("Failed to execute command:", response.text)

# Configuration
sender = "feratti@mail.ru"
password = "mWc3DC8Py4ZGApyFVsUR"
recipient = "kuzin.vadim@outlook.com"
endpoint = 'https://172.18.59.69'
app_key = '21225955'
access_token = 'Q4hUC71yQfqNI141LOoS'

# API Endpoints and Payloads
requests_info = [
    ('/artemis/api/acs/v1/door/events', {
        "startTime": "2025-02-11T08:00:00+04:00",
        "endTime": "2025-02-11T20:00:00+04:00",
        "eventType": 196893,
        "personName": "",
        "doorIndexCodes": ["3"],
        "pageNo": 1,
        "pageSize": 100
    }, 'data.json'),
    ('/artemis/api/resource/v1/person/advance/personList', {
        "pageNo": 1,
        "pageSize": 100,
        "personName": "Vadim Kuzin"
    }, 'personinfo.json')
]

# Execute API requests
for url, payload, filename in requests_info:
    headers = generate_headers(url, payload, app_key, access_token)
    response = send_request(endpoint, url, payload, headers)
    process_response(response, filename, sender, password, recipient)