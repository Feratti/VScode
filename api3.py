import requests
import hashlib
import hmac
import base64
import time
import json
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from email.mime.base import MIMEBase
from datetime import datetime
from email import encoders
import smtplib

#Send email info
sending_ts = datetime.now()
sub = "Log from HCP |  %s" % sending_ts.strftime('%Y-%m-%d %H:%M:%S')
msg = MIMEMultipart('alternative')
msg['From'] = 'feratti@mail.ru'
msg['To'] = 'kuzin.vadim@outlook.com'
msg['Subject'] = sub
sender = "feratti@mail.ru"
password = "mWc3DC8Py4ZGApyFVsUR"

# Replace these variables with your actual endpoint and credentials
endpoint = 'https://172.18.59.69'
app_key = '21225955'
access_token = 'Q4hUC71yQfqNI141LOoS'
url = '/artemis/api/acs/v1/door/events'
eventCode = 196893

if eventCode == 196893:
     event = 'Access Granted by Face'
     
# Example command payload (replace this with your specific command)
command_payload = {
    "startTime":"2025-02-12T08:00:00+04:00",
    "endTime":"2025-02-12T20:00:00+04:00",
    "eventType":196893,
    "personName":"",
    "doorIndexCodes":["3"],
    "pageNo":1,
    "pageSize":100
}
# Generate x-ca-signature
timestamp = str(int(time.time()))
body = json.dumps(command_payload)
string_to_sign = 'POST' + '\n' + 'application/json' + '\n' + 'application/json;charset=UTF-8' + '\n' + url
signature = base64.b64encode(hmac.new(access_token.encode(), string_to_sign.encode(), hashlib.sha256).digest()).decode()

headers = {
    'Accept': 'application/json',
    'Content-Type': 'application/json;charset=UTF-8',
    'X-Ca-Key': app_key,
    'X-Ca-Signature': signature,
    'X-Ca-Timestamp': timestamp
}

command_url = f'{endpoint}' + url

response = requests.post(command_url, headers=headers, json=command_payload, verify=False)

if response.status_code == 200:
    result = response.text
    with open('data.json', 'w') as f:
        json.dump(result, f)
        f.close()

        newdict = json.loads(result)
        total = (newdict['data']['total'])
        values = (newdict['data']['list'])
        with open('result.json', 'w') as file:
               for d in values:
                     dictionary = {
                          'Name': d['personName'],
                          'Check in time': d['eventTime'],
                          'Check point name': d['doorName'],
                          'Temperature': d['temperatureData']
                     }
                     datajson = json.dumps(dictionary)
                     newjs = json.loads(datajson)
                     json.dump(newjs, file, indent=4)
        
        emailbody = "This message was automatically generated by openAPI script" + '\n' + 'Total events : ' + str(total) + '\n' + 'Event type : ' + event
        msg.attach(MIMEText(emailbody, 'plain'))

        part = MIMEBase('application', "octet-stream")
        part.set_payload(open('result.json', "rb").read())
        encoders.encode_base64(part)
        part.add_header('Content-Disposition', 'attachment; filename="results.json"')
        msg.attach(part)

        s = smtplib.SMTP('smtp.mail.ru', 587)
        s.starttls()
        s.login(user=sender, password=password)
        s.send_message(msg)
        s.quit()
    print("Command executed successfully ...")
else:
    print("Failed to execute command:", response.text)